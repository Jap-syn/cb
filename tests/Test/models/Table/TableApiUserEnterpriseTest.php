<?php
namespace models\Table;

use Zend\Db\Adapter\Adapter;
use Zend\Db\ResultSet\ResultSet;
/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-12-28 at 12:47:38.
 */
class TableApiUserEnterpriseTest extends \PHPUnit_Extensions_Database_TestCase
{

    /**
     * PDOインスタンス
     * @var \PDO
     */
    protected $_conn = null;

    /**
     * Adapterインスタンス
     * @var Adapter
     */
    protected $_db = null;

    /**
     * 初期設定を行います
     * ここでは、Zend\Db\Adapter\Adapterクラスのインスタンスと、テスト対象クラスのインスタンスを作成します。
     */
    protected function setUp()
    {
        parent::setUp();

        // --------------------
        // Zend\Db\Adapter\Adapterを作成します。接続先はPHPUnit.xmlに記載します。
        // --------------------
        $driver = array(
            'driver'    => $GLOBALS['adapter'],
            'host'      => $GLOBALS['host'],
            'database'  => $GLOBALS['dbname'],
            'username'  => $GLOBALS['username'],
            'password'  => $GLOBALS['password'],
            'charset'   => $GLOBALS['charset'],
        );
        $this->_db = new Adapter($driver);

        // --------------------
        // テスト対象クラスを作成します
        // --------------------
        $this->object = new TableApiUserEnterprise($this->_db);

    }

    /**
     * 終了処理
     */
    protected function tearDown()
    {
        $this->_db->getDriver()->getConnection()->disconnect();
    }

    /**
     * 初期化処理で行うDB接続先を指定します
     * @see PHPUnit_Extensions_Database_TestCase::getConnection()
     */
    public function getConnection() {
        // --------------------
        // PDOインスタンスを作成して返します
        // --------------------
        if (is_null($this->_conn)) {
            // 接続先はPHPUnit.xmlに記載します
            $pdo = new \PDO(
                            $GLOBALS['DB_DSN'],
                            $GLOBALS['DB_USER'],
                            $GLOBALS['DB_PASSWD']
            );
            $this->_conn = $this->createDefaultDBConnection($pdo);
        }
        return $this->_conn;
    }

    /**
     * テーブルのクリーンアップを行います。内部的にはDELETE→INSERTが行われている模様
     * @see PHPUnit_Extensions_Database_TestCase::getDataSet()
     */
    public function getDataSet() {
        // --------------------
        // CSVからデータセットを読み込む
        // --------------------
        $dsCsv = new \PHPUnit_Extensions_Database_DataSet_CsvDataSet();
        $dsCsv->addTable('T_ApiUser',           __DIR__ . "/data/TableApiUserTest/T_ApiUser.csv");
        $dsCsv->addTable('T_ApiUserEnterprise', __DIR__ . "/data/TableApiUserTest/T_ApiUserEnterprise.csv");
        $dsCsv->addTable('T_Enterprise',        __DIR__ . "/data/TableApiUserTest/T_Enterprise.csv");

        // --------------------
        // "NULL"文字列を DBNull に変換する
        // --------------------
        $dsNull = new \PHPUnit_Extensions_Database_DataSet_ReplacementDataSet($dsCsv);
        $dsNull->addFullReplacement("NULL", null);

        return $dsNull;
    }

    /**
     * @var TableApiUserEnterprise
     */
    protected $object;

    /**
     * APIユーザーとEnterpriseコードが存在する場合、TRUE
     * @covers models\Table\TableApiUserEnterprise::isExistsRelation
     * @todo   Implement testIsExistsRelation().
     */
    public function testIsExistsRelation_01()
    {
        $apiuser = '9999';
        $enterprise = '6';
        $bool = $this->object->isExistsRelation($apiuser, $enterprise);

        $this->assertEquals(true, $bool);
    }

    /**
     * APIユーザーが存在しない場合、False
     * @covers models\Table\TableApiUserEnterprise::isExistsRelation
     * @todo   Implement testIsExistsRelation().
     */
    public function testIsExistsRelation_02()
    {
        $apiuser = '111';
        $enterprise = '6';
        $bool = $this->object->isExistsRelation($apiuser, $enterprise);

        $this->assertEquals(false, $bool);
    }

    /**
     * Enterpriseコードが存在しない場合、FALSE
     * @covers models\Table\TableApiUserEnterprise::isExistsRelation
     * @todo   Implement testIsExistsRelation().
     */
    public function testIsExistsRelation_03()
    {
        $apiuser = '10038';
        $enterprise = '155';
        $bool = $this->object->isExistsRelation($apiuser, $enterprise);

        $this->assertEquals(false, $bool);
    }

    /**
     * APIユーザーが存在する場合、T_Enterpriseを取得
     * @covers models\Table\TableApiUserEnterprise::findRelatedEnterprises
     * @todo   Implement testFindRelatedEnterprises().
     */
    public function testFindRelatedEnterprises_01()
    {
        $apiuserid = '10037';
        $ri = $this->object->findRelatedEnterprises($apiuserid);

        // ResultSetを作成
        $rs = new ResultSet();
        $rs->initialize($ri);
        $array = $rs->toArray();

        // --------------------
        // 取得したデータを元に、比較用データセット作成
        // --------------------
        // カラム項目を設定
        $tmd = new \PHPUnit_Extensions_Database_DataSet_DefaultTableMetaData('T_Enterprise', array_keys($array[0]));

        // テーブルを作成
        $td = new \PHPUnit_Extensions_Database_DataSet_DefaultTable($tmd);

        foreach($array as $row)
        {
            $td->addRow($row);
        }

        // データセットを作成
        $dsRslt = new \PHPUnit_Extensions_Database_DataSet_DefaultDataSet();
        $dsRslt->addTable($td);

        // --------------------
        // 想定される結果セットをCSVから作成（フォルダ名かファイル名が長すぎるとファイル取得に失敗するみたい・・・）
        // --------------------
        $dsCsv = new \PHPUnit_Extensions_Database_DataSet_CsvDataSet();
        $dsCsv->addTable('T_Enterprise',
        __DIR__ . "/data/TableApiUserTest/T_Enterprise01.csv" );

        // "NULL"文字列を DBNull に変換する
        $dsNull = new \PHPUnit_Extensions_Database_DataSet_ReplacementDataSet($dsCsv);
        $dsNull->addFullReplacement("NULL", null);

        // --------------------
        // 結果を比較
        // --------------------
        $this->assertDataSetsEqual($dsNull, $dsRslt);

    }

    /**
     * APIユーザーが存在しない場合、Null
     * @covers models\Table\TableApiUserEnterprise::findRelatedEnterprises
     * @todo   Implement testFindRelatedEnterprises().
     */
    public function testFindRelatedEnterprises_02()
    {
        $apiuserid = '9998';
        $ri = $this->object->findRelatedEnterprises($apiuserid);

        $this->assertEquals(null, $ri);

    }

    /**
     * @covers models\Table\TableApiUserEnterprise::findRelatedApiUsers
     * @todo   Implement testFindRelatedApiUsers().
     */
    public function testFindRelatedApiUsers_EnterpriseIdが存在しない場合＝NULL()
    {
        $enterpriseid = '200';
        $ri = $this->object->findRelatedApiUsers($enterpriseid);
        $this->assertEquals(null, $ri);
    }

    /**
     * @covers models\Table\TableApiUserEnterprise::findRelatedApiUsers
     * @todo   Implement testFindRelatedApiUsers().
     */
    public function testFindRelatedApiUsers_EnterpriseIdが存在する場合＝T_ApiUserを取得()
    {
        $enterpriseid = '150';
        $ri = $this->object->findRelatedApiUsers($enterpriseid);

        // ResultSetを作成
        $rs = new ResultSet();
        $rs->initialize($ri);
        $array = $rs->toArray();

        // --------------------
        // 取得したデータを元に、比較用データセット作成
        // --------------------
        // カラム項目を設定
        $tmd = new \PHPUnit_Extensions_Database_DataSet_DefaultTableMetaData('T_ApiUser', array_keys($array[0]));

        // テーブルを作成
        $td = new \PHPUnit_Extensions_Database_DataSet_DefaultTable($tmd);

        foreach($array as $row)
        {
            $td->addRow($row);
        }

        // データセットを作成
        $dsRslt = new \PHPUnit_Extensions_Database_DataSet_DefaultDataSet();
        $dsRslt->addTable($td);

        // --------------------
        // 想定される結果セットをCSVから作成（フォルダ名かファイル名が長すぎるとファイル取得に失敗するみたい・・・）
        // --------------------
        $dsCsv = new \PHPUnit_Extensions_Database_DataSet_CsvDataSet();
        $dsCsv->addTable('T_ApiUser',
        __DIR__ . "/data/TableApiUserTest/T_ApiUser01.csv" );

        // "NULL"文字列を DBNull に変換する
        $dsNull = new \PHPUnit_Extensions_Database_DataSet_ReplacementDataSet($dsCsv);
        $dsNull->addFullReplacement("NULL", null);

        // --------------------
        // 結果を比較
        // --------------------
        $this->assertDataSetsEqual($dsNull, $dsRslt);

    }

}
